[globalOptions]

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories will be relative to this.
#~ inputDir  = /gpfs/work4/0/dynql/input/

#~ # the following inputDir contains mainly 5 arcmin input files - on velocity
#~ inputDir     = /projects/0/dfguu/users/edwin/data/dynqual_input/copied_from_snellius_on_2023-03-22/

# the following inputDir contains mainly 5 arcmin input files - on Snellius
inputDir     = /gpfs/work4/0/dynql/input/



# Set the output directory in an absolute path.
#~ outputDir = /gpfs/home6/ejones/test/
#~ outputDir = /scratch/sutan101/test_dynqual_30sec/

# for snellius
outputDir = /scratch-shared/edwin/test_dynqual_30sec_for_spinup/


#~ # Global Run
#~ cloneAreas = Global

# Map of clone (must be provided in PCRaster maps)
# - spatial resolution and coverage are based on this map:
#~ #cloneMap = clone_maps/RhineMeuse_05min.map
#~ cloneMap  = clone_maps/clone_%3s.map


# an example clone map for the rhine-meuse
# - location on velocity
#~ cloneMap  = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/europe_30sec/cloneMaps/clonemaps_europe_countries/rhinemeuse/rhinemeuse_30sec.map
#~ cloneMap  = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/cloneMaps/Java30sec.clone.map
cloneMap     = /projects/0/dynql/edwindql_loadings/landmask_30sec_uppersaguling.map
#~ # - if you run it from eejit
#~ cloneMap     = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/europe_30sec/cloneMaps/clonemaps_europe_countries/rhinemeuse/rhinemeuse_30sec.map

# The area/ landmask of interest:
# If None, area/landmask is limited for cells with ldd value.
#~ #landmask = clone_maps/RhineMeuse_05min.map
#~ landmask  = clone_maps/mask_%3s.map

#~ landmask  = None
landmask     = /projects/0/dynql/edwindql_loadings/landmask_30sec_uppersaguling.map


# netcdf attributes for output files:
institution    = Department of Physical Geography, Utrecht University
title          = DynQual Output (run coupled with PCR-GLOBWB2)
description    = development setup for 30 arc-sec resolution


#~ startTime = 1980-01-01
#~ endTime   = 1980-01-03

#~ startTime = 2014-01-01
#~ endTime   = 2019-12-31

startTime = 2014-01-01
endTime   = 2014-12-31

#~ startTime = 2014-12-29
#~ endTime   = 2014-12-31


# Format: YYYY-MM-DD
# The model runs on the daily time step.

# spinning up options
maxSpinUpsInYears = 20
minConvForTotlSto = 0.5
minConvForSoilSto = 0.5
minConvForGwatSto = 0.5
minConvForChanSto = 0.5

# option to automatically merge output files (needed for parallel runs)
with_merging = False


[meteoOptions]
# This section is for providing the meteorological input required for PCR-GLOBWB/DynQual runs
# - Ensure correct units!: precipitation (m day-1); temperature (C), refET (m day-1); cloud cover (%), radiation (W m-2); vapour pressure (hPa)

# Set the forcing temperature and precipitation files (relative to inputDir)
precipitationNC = forcing/historical/W5E5/pr_W5E5v2.0_19790101-20191231_with_climatology_on_1978_mday-1.nc
precipitationVarName = pr
precipitationCorrectionFactor=1

temperatureNC   = forcing/historical/W5E5/tas_W5E5v2.0_19790101-20191231_with_climatology_on_1978_C.nc
temperatureVarName = tas

# Method to calculate referencePotETP (reference potential evaporation+transpiration)
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given
referenceETPotMethod = Input
refETPotFileNC = forcing/historical/W5E5/epot_W5E5_19790101_20191231_mday-1.nc
referenceETPotVarName = potentialEvaporation

#Set the additional forcing needed for water temperature module (e.g. cloudcover, radiation and vapor pressure files)
cloudcoverNC  = forcing/historical/W5E5/cloudCover_cru_ts3.21.nc
radiationNC   = forcing/historical/W5E5/rsds_W5E5v2.0_19790101-20191231_with_climatology_on_1978_wm-2.nc
vaporNC       = forcing/historical/W5E5/vap_cru_ts3.21.nc
annualAvgTNC  = forcing/historical/W5E5/tas_W5E5v2.0_19790101-20191231_annAvg_C.nc
sunhoursTable = forcing/historical/sunhoursfrac.tbl


[meteoDownscalingOptions]
# This section is for a 5 arcmin run, for downscaling meteorological forcing at 30 arcmin to 5 arcmin.  
                                                                                                                                  

downscalePrecipitation  = True                                                                                                                                   
downscaleTemperature    = True                                                                                                                                  
downscaleReferenceETPot = False    


# downscaling (based on the digital elevation model):                                                                                                            
highResolutionDEM    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/topography/merit_dem_processed/version_2021-02-XX/maps_covered_with_zero/dem_average_topography_parameters_30sec_february_2021_global_covered_with_zero.nc

# The downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells.
# - note that the resolution of the following "meteoDownscaleIds" should have the same resolution as the forcing data.                                                    
meteoDownscaleIds    = forcing/other/uniqueIds_30min.nc


# lapse rates:                                                                                                                                                   
#~ temperLapseRateNC = forcing/other/temperature_slope.nc
#~ precipLapseRateNC = forcing/other/precipitation_slope.nc                                                                                                                                                   
# downscaling criteria:                                                                                                                     
#~ temperatCorrelNC  = forcing/other/temperature_correl.nc
#~ precipitCorrelNC  = forcing/other/precipitation_correl.nc

temperLapseRateNC = /projects/0/dynql/edwindql_loadings/temperature_slope_used.nc
precipLapseRateNC = /projects/0/dynql/edwindql_loadings/precipitation_slope_used.nc                                                                                                                                                   
temperatCorrelNC  = /projects/0/dynql/edwindql_loadings/temperature_correl_used.nc                                                                                                                                                   
precipitCorrelNC  = /projects/0/dynql/edwindql_loadings/precipitation_correl_used.nc
	                                                                                                                                                                 
# windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):                                                                      
smoothingWindowsLength = 0                                         


[landSurfaceOptions]
# This section is for defining the land surface options, such as water use.

debugWaterBalance = True

numberOfUpperSoilLayers = 2

#~ topographyNC = landSurface/topography_parameters_05min.nc
topographyNC = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/topography/merit_dem_processed/version_2021-02-XX/maps_covered_with_zero/topography_parameters_30sec_february_2021_global_covered_with_zero.nc


#~ soilPropertiesNC  = landSurface/soilProperties5ArcMin.nc
soilPropertiesNC = None
# - if soilPropertiesNC = None, the following soil parameters will be used
firstStorDepth       = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/layerDepth_average_1_south_east_asian_and_india_etc_1km.nc
secondStorDepth      = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/layerDepth_average_2_south_east_asian_and_india_etc_1km.nc
soilWaterStorageCap1 = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/WHC_average_1_south_east_asian_and_india_etc_1km.nc
soilWaterStorageCap2 = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/WHC_average_2_south_east_asian_and_india_etc_1km.nc
airEntryValue1       = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/psiAir_average_1_south_east_asian_and_india_etc_1km.nc
airEntryValue2       = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/psiAir_average_2_south_east_asian_and_india_etc_1km.nc
poreSizeBeta1        = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/BCH_average_1_south_east_asian_and_india_etc_1km.nc
poreSizeBeta2        = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/BCH_average_2_south_east_asian_and_india_etc_1km.nc
resVolWC1            = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/vmcRes_average_1_south_east_asian_and_india_etc_1km.nc
resVolWC2            = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/vmcRes_average_2_south_east_asian_and_india_etc_1km.nc
satVolWC1            = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/vmcSat_average_1_south_east_asian_and_india_etc_1km.nc
satVolWC2            = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/vmcSat_average_2_south_east_asian_and_india_etc_1km.nc
KSat1                = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/kSat_average_1_south_east_asian_and_india_etc_1km.nc
KSat2                = /projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX/kSat_average_2_south_east_asian_and_india_etc_1km.nc

#~ (pcrglobwb_python3) sutan101@velocity.geo.uu.nl:/projects/0/dfguu/users/edwin/data/soilgrids_1km_parameterization_south_east_asian_v202303XX$ ls -lah
#~ total 1.7G
#~ drwxr-xr-x  3 1111 cgred   19 Mar 13  2023 .
#~ drwxr-xr-x 50 1111 cgred   54 Oct 25 09:46 ..
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 layerDepth_average_1_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 layerDepth_average_2_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 WHC_average_1_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 WHC_average_2_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 psiAir_average_1_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 psiAir_average_2_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 BCH_average_1_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 BCH_average_2_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 vmcRes_average_1_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 vmcRes_average_2_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 vmcSat_average_1_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 vmcSat_average_2_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 kSat_average_1_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 kSat_average_2_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 WHCFC_average_1_south_east_asian_and_india_etc_1km.nc
#~ -r--r--r--  1 1111 cgred 407M Mar 12  2023 WHCFC_average_2_south_east_asian_and_india_etc_1km.nc
#~ drwxr-xr-x  2 1111 cgred   16 Apr  4  2023 remapbil_n_filled_30sec


percolationImp       = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/soil/impeded_drainage/global_30sec_impeded_drainage_permafrost_dsmw_correct_lats.nc


includeIrrigation = True
# if True, there are four land cover types defined: forest,grassland,irrPaddy,irrNonPaddy
# if False, two (natural) land cover types defined: forest,grassland


# netcdf time series for historical expansion of irrigation areas (unit: hectares). 
# Note: The resolution of this map must be consistent with the resolution of cellArea. 
#~ historicalIrrigationArea = waterUse/irrigated_areas_historical_1960-2019.nc
# - don´t use this for the 30sec version

#~ # land cover classes
#~ landCoverTypes = naturalVegetationAndRainFedCrops,irrPaddy,irrNonPaddy


irrigationEfficiency     = None


includeDomesticWaterDemand  = True
includeIndustryWaterDemand  = True
includeLivestockWaterDemand = True


domesticWaterDemandFile  = waterUse/domestic_water_demand_historical_1960-2019.nc
industryWaterDemandFile  = waterUse/industry_water_demand_historical_1960-2019.nc
livestockWaterDemandFile = waterUse/livestock_water_demand_historical_1961-2019.nc


# desalination water supply (maximum/potential/capacity)
#~ desalinationWater = waterUse/desalination_GWI_1960_2019_mday.nc
desalinationWater = /projects/0/dynql/edwindql_loadings/desalination_GWI_1960_2019_mday_used.nc


limitAbstraction = False

# zone IDs (scale) at which ground- surface-water allocation is performed  
allocationSegmentsForGroundSurfaceWater = None



#~ [naturalVegetationAndRainFedCropsOptions]
#~ name = naturalVegetationAndRainFedCrops

[forestOptions]
name = forest

debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0055
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

cropCoefficientNC = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/composite-short-n-tall_crop_coefficient.nc
interceptCapNC    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/composite-short-n-tall_intercept_capacity.nc
coverFractionNC   = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/composite-short-n-tall_cover_fraction.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = 1.0
minSoilDepthFrac  = 0.99
maxSoilDepthFrac  = 1.01
rootFraction1     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/rfrac1_all.nc
rootFraction2     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/rfrac2_all.nc	
maxRootDepth      = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/meanrootdepth_all.nc
# Note: The maxRootDepth is not used for non irrigated land cover types. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.


# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

noParameterExtrapolation = True


[grasslandOptions]
name = grassland

debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0055
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
minInterceptCap  = 0.0002

cropCoefficientNC = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/composite-short-n-tall_crop_coefficient.nc
interceptCapNC    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/composite-short-n-tall_intercept_capacity.nc
coverFractionNC   = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/composite-short-n-tall_cover_fraction.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = 0.0
minSoilDepthFrac  = 0.99
maxSoilDepthFrac  = 1.01
rootFraction1     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/rfrac1_all.nc
rootFraction2     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/rfrac2_all.nc	
maxRootDepth      = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops_version_2021-02-XX/meanrootdepth_all.nc
# Note: The maxRootDepth is not used for non irrigated land cover types. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.


# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

noParameterExtrapolation = True


[irrPaddyOptions]

name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0055
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
#
fracVegCover     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/irrigated_fractions/global_estimate_irrigation_paddy_fraction_30sec.nc
minSoilDepthFrac = 0.99
maxSoilDepthFrac = 1.01
rootFraction1    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30min_from_gmd_paper_input/landSurface/landCover/irrPaddy/rfrac1_paddy.nc
rootFraction2    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30min_from_gmd_paper_input/landSurface/landCover/irrPaddy/rfrac2_paddy.nc
maxRootDepth     = 0.5
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
cropDeplFactor   = 0.2
minInterceptCap  = 0.0002

cropCoefficientNC = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30min_from_gmd_paper_input/landSurface/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc


# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

noParameterExtrapolation = True


[irrNonPaddyOptions]

name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0055
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/landCover/irrigated_fractions/global_estimate_irrigation_non_paddy_fraction_30sec.nc
minSoilDepthFrac = 0.99
maxSoilDepthFrac = 1.01
rootFraction1    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30min_from_gmd_paper_input/landSurface/landCover/irrNonPaddy/rfrac1_nonpaddy.nc
rootFraction2    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30min_from_gmd_paper_input/landSurface/landCover/irrNonPaddy/rfrac2_nonpaddy.nc
maxRootDepth     = 1.0
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
cropDeplFactor   = 0.5
minInterceptCap  = 0.0002

cropCoefficientNC = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30min_from_gmd_paper_input/landSurface/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

# initial conditions:

interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

noParameterExtrapolation = True


[groundwaterOptions]
debugWaterBalance = True

#~ groundwaterPropertiesNC = groundwater/groundwaterProperties5ArcMin.nc
#~ # The file will containspecificYield (m3.m-3), kSatAquifer (m.day-1), recessionCoeff (day-1)

groundwaterPropertiesNC    = None
#
recessionCoeff = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/groundwater/properties/version_202102XX/recession_coefficient_30sec.nc
kSatAquifer    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/groundwater/properties/version_202102XX/k_conductivity_aquifer_filled_30sec.nc
specificYield  = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/groundwater/properties/version_202102XX/specific_yield_aquifer_filled_30sec.nc
#

#
# - minimum value for groundwater recession coefficient (day-1) 
minRecessionCoeff = 1.0e-4

# some options for constraining groundwater abstraction
limitFossilGroundWaterAbstraction      = True
estimateOfRenewableGroundwaterCapacity = 0.0
estimateOfTotalGroundwaterThickness    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/groundwater/aquifer_thickness_estimate/version_2020-09-XX/thickness_05min_remapbil_to_30sec_filled_with_pcr_correct_lat.nc
# minimum and maximum total groundwater thickness 
minimumTotalGroundwaterThickness       = 100.
maximumTotalGroundwaterThickness       = None

# annual pumping capacity for each region (unit: billion cubic meter per year), should be given in a netcdf file
pumpingCapacityNC = groundwater/regional_abstraction_limit.nc

# initial conditions:
storGroundwaterIni = ini_states_W5E5/storGroundwater_2015-12-31.map
storGroundwaterFossilIni = ini_states_W5E5/storGroundwaterFossil_2015-12-31.map
#
# additional initial conditions for pumping behaviors
#~ avgNonFossilGroundwaterAllocationLongIni  = ini_states_W5E5/avgNonFossilGroundwaterAllocationLong_2015-12-31.map
#~ avgNonFossilGroundwaterAllocationShortIni = ini_states_W5E5/avgNonFossilGroundwaterAllocationShort_2015-12-31.map
avgNonFossilGroundwaterAllocationLongIni  = 0.0
avgNonFossilGroundwaterAllocationShortIni = 0.0
avgTotalGroundwaterAbstractionIni         = ini_states_W5E5/avgTotalGroundwaterAbstractionIni_2015-12-31.map
#~ avgTotalGroundwaterAllocationLongIni   = ini_states_W5E5/avgTotalGroundwaterAllocationLong_2015-12-31.map
#~ avgTotalGroundwaterAllocationShortIni  = ini_states_W5E5/avgTotalGroundwaterAllocationShort_2015-12-31.map
avgTotalGroundwaterAllocationLongIni      = 0.0
avgTotalGroundwaterAllocationShortIni     = 0.0

# zonal IDs (scale) at which zonal allocation of groundwater is performed  
allocationSegmentsForGroundwater = waterUse/abstraction_zones_30min_05min.nc


[prefactorOptions] 
linear_multiplier_for_refPotET         = 1.0
linear_multiplier_for_degreeDayFactor  = 1.0
linear_multiplier_for_minSoilDepthFrac = 1.0
log_10_multiplier_for_kSat             = 0.0
linear_multiplier_for_storCap          = 1.0
log_10_multiplier_for_recessionCoeff   = 0.0


[routingOptions]

#~ routingMethod = simplifiedKinematicWave
routingMethod = accuTravelTime


debugWaterBalance = True

# option for maximum length of a sub time step in seconds (optional and only used if kinematicWave is used)
# - Note that too long sub time step may create water balance errors.
# - Default values: 3600 seconds for 30 arcmin ; 720 seconds for 5 arcmin
maxiumLengthOfSubTimeStep = 720.

# Set offlineRun to False when running DynQual one-way coupled with PCR-GLOBWB. For offline run, use offline .ini file
offlineRun = False

#~ lddMap      = routing/lddsound_05min.nc
#~ cellAreaMap = routing/cellsize05min.nc
#~ gradient    = routing/channel_gradient.nc

lddMap   = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/surface_water_bodies/version_2020-05-XX/lddsound_30sec_version_202005XX.map

#~ lddMap      = 5.0

cellAreaMap = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/cell_area/cdo_grid_area_30sec_map_correct_lat.nc
gradient    = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/channel_gradient_channel_parameters_30sec_february_2021_global_covered_with_zero.nc              

# manning coefficient
manningsN   = 0.04


# Option for flood plain simulation
dynamicFloodPlain = True
floodplainManningsN= 0.04

# Options for floodplain routing module
#~ relativeElevationFiles = routing/dzRel%04d.nc
relativeElevationFiles = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/landSurface/topography/merit_dem_processed/version_2021-02-XX/maps_covered_with_zero/dzRel%04d_topography_parameters_30sec_february_2021_global_covered_with_zero.nc
relativeElevationLevels = 0.0,0.01,0.05,0.10,0.20,0.30,0.40,0.50,0.60,0.70,0.80,0.90,1.00

#~ ## Channel properties for flooding for 5 arcmin resolution
#~ maxChannelCapacity = routing/bankfull_capacity.map
#~ #channelLength     = routing/bankfull_length.map
#~ channelDepth       = routing/bankfull_depth.map
#~ channelGradient    = routing/channel_gradient.map
#~ channelLDD         = routing/lddsound_05min.nc

# Channel properties for flooding for 30 arcsec resolution
channelLDD = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/surface_water_bodies/version_2020-05-XX/lddsound_30sec_version_202005XX.map
channelGradient = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/channel_gradient_channel_parameters_30sec_february_2021_global_covered_with_zero.nc
# constant channel depth 
channelDepth = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/bankfull_depth_channel_parameters_30sec_february_2021_global_covered_with_zero.nc
# constant channel width (optional)
#~ constantChannelWidth = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/bankfull_width_channel_parameters_30sec_february_2021_global_covered_with_zero.nc
#~ # minimum channel width (optional)
#~ minimumChannelWidth  = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/bankfull_width_channel_parameters_30sec_february_2021_global_covered_with_zero.nc

# channel properties for flooding
#~ bankfullCapacity     = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/estimate_bankfull_capacity/bankfull_capacity_channel_parameters_30sec_february_2021_global_covered_with_zero.nc
#~ bankfullCapacity     = None
#~ # - If None, it will be estimated from (bankfull) channel depth (m) and width (m) 
maxChannelCapacity = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/estimate_bankfull_capacity/estimate_channel_storage_capacity.nc
bankfullCapacity   = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/estimate_bankfull_capacity/estimate_channel_storage_capacity.nc

# Smoothing options for floodplain PDF
reductionKK = 0.5
criterionKK = 40.0

# lake and reservoir parameters
#~ waterBodyInputNC    = routing/waterBodies5ArcMin.nc
waterBodyInputNC       = /projects/0/dfguu/users/edwin/data/pcrglobwb_input_arise/develop/global_30sec/routing/surface_water_bodies/version_2020-05-XX/lakes_and_reservoirs_30sec_global_2019_version_202005XX.nc
onlyNaturalWaterBodies = False



# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = routing/cropCoefficientForOpenWater.nc
minCropWaterKC         = 1.00

# number of days (timesteps) that have been performed for spinning up initial conditions in the routing module):
timestepsToAvgDischargeIni     = ini_states_W5E5/timestepsToAvgDischarge_2015-12-31.map

# initial hydrological conditions:
waterBodyStorageIni              = ini_states_W5E5/waterBodyStorage_2015-12-31.map
channelStorageIni                = ini_states_W5E5/channelStorage_2015-12-31.map
readAvlChannelStorageIni         = ini_states_W5E5/readAvlChannelStorage_2015-12-31.map
avgDischargeLongIni              = ini_states_W5E5/avgDischargeLong_2015-12-31.map
avgDischargeShortIni             = ini_states_W5E5/avgDischargeShort_2015-12-31.map
m2tDischargeLongIni              = ini_states_W5E5/m2tDischargeLong_2015-12-31.map
avgBaseflowLongIni               = ini_states_W5E5/avgBaseflowLong_2015-12-31.map
riverbedExchangeIni              = ini_states_W5E5/riverbedExchange_2015-12-31.map
avgLakeReservoirInflowShortIni   = ini_states_W5E5/avgLakeReservoirInflowShort_2015-12-31.map
avgLakeReservoirOutflowLongIni   = ini_states_W5E5/avgLakeReservoirOutflowLong_2015-12-31.map
avg_irrGrossDemandIni            = ini_states_W5E5/avg_irrGrossDemand_2015-12-31.map
avg_netLqWaterToSoilIni          = ini_states_W5E5/avg_netLqWaterToSoil_2015-12-31.map

# initial condition of sub-time step discharge (needed for estimating number of time steps in kinematic wave methods)
subDischargeIni                  = ini_states_W5E5/subDischarge_2015-12-31.map

#~ # Option to enable quality modelling (water temperature, salinity, organic, pathogen) 
#~ quality = True

# Option to enable quality modelling (water temperature, salinity, organic, pathogen) 
quality = False


# Initial conditions for water quality modelling:
waterTemperatureIni = ini_states_W5E5/waterTemperature_2015-12-31.map
iceThicknessIni     = ini_states_W5E5/iceThickness_2015-12-31.map
routedTDSIni		= ini_states_W5E5/routedTDS_2015-12-31.map
routedBODIni        = ini_states_W5E5/routedBOD_2015-12-31.map
routedFCIni         = ini_states_W5E5/routedFC_2015-12-31.map

# Powerplant return flows (m3 s-1). For running without powerplants, set to 0.
powerplantNC    =  calc_loadings/PowRF_1980_2030.nc

# Option to enable calculation of loads in model run. If calculateLoads is set to true, additional socio-economic data (below) must be provided.
#~ calculateLoads  = True
calculateLoads  = False

#~ # Input data for forcing pollutant loadings. Required when calculateLoads is set to False; ignored if calculateLoads is set to True.
#~ TDSloadNC = /gpfs/work4/0/dynql/dynql_W5E5/W5E5_output/TDSload_daily_1980_2019.nc
#~ BODloadNC = /gpfs/work4/0/dynql/dynql_W5E5/W5E5_output/BODload_daily_1980_2019.nc
#~ FCloadNC  = /gpfs/work4/0/dynql/dynql_W5E5/W5E5_output/FCload_daily_1980_2019.nc

# Input data for calculating pollutant loadings, required only when calculateLoads is True.
#- Ensure correct units: Population (capita), factorInd_Man (fraction: 0-1), UrbanFraction (fraction 0-1), LivPopulation (stock)
#- Ensure correct units: Dom_ExcrLoad (g or cfu per capita), Man_EfflConc (mg/L or cfu/100ml), USR_EfflConc (mg/L or cfu/100ml), Liv_ExcrLoad (g or cfu per stock), Irr_EfflConc (mg/L)
PopulationNC    = calc_loadings/Population_1980_2030.nc
factorInd_ManNC = calc_loadings/factorInd_Man.nc
UrbanFractionNC = calc_loadings/urban_fraction_1970-2010.nc

#~ LivPopulationNC = calc_loadings/Liv_Pop_1980_2030.nc
LivPopulationNC = /gpfs/work4/0/dynql/edwindql_loadings/Liv_Pop_1980_2030.nc


Dom_ExcrLoadNC  = calc_loadings/Dom_ExcLoad.nc
Man_EfflConcNC  = calc_loadings/Man_EffConc.nc
USR_EfflConcNC  = calc_loadings/USR_EffConc.nc
Liv_ExcrLoadNC  = calc_loadings/Liv_ExcLoad.nc
Irr_EfflConcNC  = calc_loadings/Irr_EffConc.nc

#Gridded wastewater treatment pathways (fraction 0-1)
#- split between Tertiary, Secondary, Primary, collected untreated, basic sanitation (dom only), open defecation (dom only), direct (man only)
WWtPathwaysNC = calc_loadings/WastewaterPathways_1980_2015.nc

# other constants
#- TDS and TSS in mg/L 
backgroundSalinity = loadings/Background_TDS_05min.nc
TSSmap             = loadings/TSS_2000.map

# water quality initial conditions per sector:
#- if loads per sector is set to True, loadings can also be reported per individual sector. Note: only avaliable when calculateLoads is set to True.
loadsPerSector = True
# Initial conditions for water quality modelling (per sector)
routedDomTDSIni     = ini_states_W5E5/routedDomTDS_2015-12-31.map
routedManTDSIni     = ini_states_W5E5/routedManTDS_2015-12-31.map
routedUSRTDSIni     = ini_states_W5E5/routedUSRTDS_2015-12-31.map
routedIrrTDSIni     = ini_states_W5E5/routedIrrTDS_2015-12-31.map
routedDomBODIni     = ini_states_W5E5/routedDomBOD_2015-12-31.map
routedManBODIni     = ini_states_W5E5/routedManBOD_2015-12-31.map
routedUSRBODIni     = ini_states_W5E5/routedUSRBOD_2015-12-31.map
routedintLivBODIni  = ini_states_W5E5/routedintLivBOD_2015-12-31.map
routedextLivBODIni  = ini_states_W5E5/routedextLivBOD_2015-12-31.map
routedDomFCIni      = ini_states_W5E5/routedDomFC_2015-12-31.map
routedManFCIni      = ini_states_W5E5/routedManFC_2015-12-31.map
routedUSRFCIni      = ini_states_W5E5/routedUSRFC_2015-12-31.map
routedintLivFCIni   = ini_states_W5E5/routedintLivFC_2015-12-31.map
routedextLivFCIni   = ini_states_W5E5/routedextLivFC_2015-12-31.map

[reportingOptions]
### output files that will be written in the disk in netcdf files:
# ensure that you are only writing out files that are explicity used in your model run congifuration!
# common options for hydrology: baseflow,interflowTotal,directRunoff,discharge,channelStorage
# common options for quality: waterTemp,TDSload,BODload,FCload,routedTDS,routedBOD,routedFC,salinity,organic,pathogen
# common options for loads per sector: Dom_TDSload,Man_TDSload,USR_TDSload,Irr_TDSload,Dom_BODload,Man_BODload,USR_BODload,intLiv_BODload,extLiv_BODload,Dom_FCload,Man_FCload,USR_FCload,intLiv_FCload,extLiv_FCload,routedDomTDS,routedManTDS,routedUSRTDS,routedIrrTDS,routedDomBOD,routedManBOD,routedUSRBOD,routedintLivBOD,routedextLivBOD,routedDomFC,routedManFC,routedUSRFC,routedintLivFC,routedextLivFC

#~ # - daily resolution
#~ outDailyTotNC = baseflow,interflowTotal,directRunoff,discharge,channelStorage,waterTemp,TDSload,BODload,FCload,routedTDS,routedBOD,routedFC,salinity,organic,pathogen,Dom_TDSload,Man_TDSload,USR_TDSload,Irr_TDSload,Dom_BODload,Man_BODload,USR_BODload,intLiv_BODload,extLiv_BODload,Dom_FCload,Man_FCload,USR_FCload,intLiv_FCload,extLiv_FCload,routedDomTDS,routedManTDS,routedUSRTDS,routedIrrTDS,routedDomBOD,routedManBOD,routedUSRBOD,routedintLivBOD,routedextLivBOD,routedDomFC,routedManFC,routedUSRFC,routedintLivFC,routedextLivFC

#~ # - monthly resolution
#~ outMonthTotNC = None
#~ outMonthAvgNC = baseflow,interflowTotal,directRunoff,discharge,channelStorage,waterTemp,TDSload,BODload,FCload,routedTDS,routedBOD,routedFC,salinity,organic,pathogen,Dom_TDSload,Man_TDSload,USR_TDSload,Irr_TDSload,Dom_BODload,Man_BODload,USR_BODload,intLiv_BODload,extLiv_BODload,Dom_FCload,Man_FCload,USR_FCload,intLiv_FCload,extLiv_FCload,routedDomTDS,routedManTDS,routedUSRTDS,routedIrrTDS,routedDomBOD,routedManBOD,routedUSRBOD,routedintLivBOD,routedextLivBOD,routedDomFC,routedManFC,routedUSRFC,routedintLivFC,routedextLivFC,temperature
#~ outMonthEndNC = None
#~ outMonthMaxNC = channelStorage,discharge,totalRunoff,routedTDS,routedBOD,routedFC,salinity,organic,pathogen
#~ outAnnuaTotNC = None

#~ # - annual resolution
#~ outAnnuaAvgNC = baseflow,interflowTotal,directRunoff,discharge,channelStorage,waterTemp,TDSload,BODload,FCload,routedTDS,routedBOD,routedFC,salinity,organic,pathogen,Dom_TDSload,Man_TDSload,USR_TDSload,Irr_TDSload,Dom_BODload,Man_BODload,USR_BODload,intLiv_BODload,extLiv_BODload,Dom_FCload,Man_FCload,USR_FCload,intLiv_FCload,extLiv_FCload,routedDomTDS,routedManTDS,routedUSRTDS,routedIrrTDS,routedDomBOD,routedManBOD,routedUSRBOD,routedintLivBOD,routedextLivBOD,routedDomFC,routedManFC,routedUSRFC,routedintLivFC,routedextLivFC
#~ outAnnuaEndNC = None
#~ outAnnuaMaxNC = channelStorage,discharge,totalRunoff,routedTDS,routedBOD,routedFC,salinity,organic,pathogen


# - daily resolution
outDailyTotNC = None

# - monthly resolution
outMonthTotNC = None
outMonthAvgNC = None
outMonthEndNC = None
outMonthMaxNC = None
outAnnuaTotNC = None

# - annual resolution
outAnnuaAvgNC = None
outAnnuaEndNC = None
outAnnuaMaxNC = None



# netcdf format and zlib setup
formatNetCDF = NETCDF4
zlib = True
